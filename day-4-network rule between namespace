####edit the default namespace and add the labels
  kubectl edit ns default
  #######add the label
# Please edit the object below. Lines beginning with a '#' will be ignored,
# and an empty file will abort the edit. If an error occurs while saving this file will be
# reopened with the relevant failures.
#
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: "2023-11-27T10:54:36Z"
  labels:
    kubernetes.io/metadata.name: default
  name: default
  resourceVersion: "43"
  uid: bbc29d15-aa09-4909-8f49-29594ec2fbdb
  labels: ##add this line
    ns: default  ###add this line
spec:
  finalizers:
  - kubernetes
status:
  phase: Active
    #####finally save the file
    ###lets create another namespace and add the labels
kubectl create ns cassandra
  kubectl edit ns cassandra
    ######add the label and save the file
# Please edit the object below. Lines beginning with a '#' will be ignored,
# and an empty file will abort the edit. If an error occurs while saving this file will be
# reopened with the relevant failures.
#
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: "2023-11-30T04:45:15Z"
  labels:
    kubernetes.io/metadata.name: cassandra
  name: cassandra
  resourceVersion: "88478"
  uid: 2ccadc27-6ca5-417f-8839-7d6b650f29db
  labels: ###add this line
    ns: cassandra ###add this line
spec:
  finalizers:
  - kubernetes
status:
  phase: Active
######lets create a deny rule in the cassandra namespace
    
  ##we already have the deny rule
     402  cp deny.yml dbdeny.yml
####lets modify the deny rule
    vi dbdeny.yml
    ##########
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: dbdeny ###new name of the policy
  namespace: cassandra ###this is the namespace
spec:
  podSelector: {}
  policyTypes:
  - Egress
  - Ingress
  egress:
  - ports:
    - port: 53
      protocol: TCP
    - port: 53
      protocol: UDP

####to verfiy the policy
kubectl get networkpolicy --namespace=cassandra
###lets delete the casandra deny the default policy we will delete it. and create an ingress rule from frontend pod to the namesapce casaandra
frontend can intiate connection to back end only
it cannot intiate connection anywhere else 
###lets first delete the default deny policy for cassandra
421  kubectl delete networkpolicy dbdeny --namespace=cassandra
###lets update the backedn deny policy
vi backend.yml
#####add this policy so that namespace wise communcation happen
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: backend-network-policy
  namespace: default
spec:
  podSelector:
    matchLabels:
      run: backend
  policyTypes:
    - Egress
    - Ingress
  ingress:
    - from:

        - podSelector:
            matchLabels:
              run: frontend
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              ns: cassandra
###########save it apply the file
kubectl apply -f backend.yml
#########verify it
 450  kubectl get pod -A -o wide
###ip address is the address of the cassandra pod
  451  kubectl exec backend -- curl 192.168.1.13
