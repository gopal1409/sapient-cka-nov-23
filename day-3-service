###lets create the deployment and expose it
224  kubectl create deploy webapp --image=nginx
  225  kubectl get deploy
  226  kubectl get svc
  #####by default if you dont give any service type it will be exposed using clusterip
  227  kubectl expose deploy webapp --port=80 --name=my-webapp-service
  228  kubectl get svc
  ####describe service will show you that your service is mapped to your endpoint which is the pod ip
  229  kubectl describe svc my-webapp-service
  230  kubectl get pod -o wide

####nodeport how to access the application outside k8s cluster using node port. node machine ip and the port number
####nodeport has a range from 30,0000 till 320000
 265  kubectl expose deploy webapp --type=NodePort --port=80 --name=my-webapp-service-nodeport
  266  kubectl get svc
###copy the second mchine ip in the browser:portnumber 
####lets see that internally they talk to each other or not
288  kubectl run frontend --image=nginx
  289  kubectl run backend --image=nginx
  290  kubectl expose pod frontend --port 80
  291  kubectl expose pod backend --port 80
  292  kubectl exec frontend -- curl backend
  293  kubectl exec backend -- curl frontend
